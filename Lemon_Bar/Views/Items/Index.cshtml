@model IEnumerable<Lemon_Bar.Models.Item>

@{
    ViewData["Title"] = "Inventory List";
}

<html>
<body>
    <h1><b>Current Inventory List</b></h1>

        <ul >
        <li > <a asp-action="Create" asp-route-type="Mixers"> Add Mixers</a > </li > <li > <a asp-action="Create" asp-route-type="Garnish"> Add Garnish</a > </li >
        </ul >

    @*<table class="table">*@
    <table class="styled-table" id="invTable">
        <thead>
            <tr>
                <th onclick="sortTable(0)">
                    @Html.DisplayNameFor(model => model.ItemName)
                </th>
                <th onclick="sortTable(1)">
                    @Html.DisplayNameFor(model => model.TotalCost)
                </th>
                <th onclick="sortTable(2)">
                    @Html.DisplayNameFor(model => model.Quantity)
                </th>
                <th onclick="sortTable(3)">
                    @Html.DisplayNameFor(model => model.UnitCost)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Units)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Garnish)
                </th>
                @*<th>
                        @Html.DisplayNameFor(model => model.UserNavigation)
                    </th>*@
                <th>***   Actions   ***</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.ItemName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TotalCost)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Quantity)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.UnitCost)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Units)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Garnish)
                    </td>
                    @*<td>
                            @Html.DisplayFor(modelItem => item.UserNavigation.Id)
                        </td>*@
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id">Add More</a> |
                        @*<a asp-action="Details" asp-route-id="@item.Id">Details</a> |*@
                        <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <!--Attempt to sort table by column header-->
    <script>
        function sortTable(n) {
            var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
            table = document.getElementById("invTable");
            switching = true;
            //Set the sorting direction to ascending:
            dir = "asc";
            /*Make a loop that will continue until
            no switching has been done:*/
            while (switching) {
                //start by saying: no switching is done:
                switching = false;
                rows = table.rows;
                /*Loop through all table rows (except the
                first, which contains table headers):*/
                for (i = 1; i < (rows.length - 1); i++) {
                    //start by saying there should be no switching:
                    shouldSwitch = false;
                    /*Get the two elements you want to compare,
                    one from current row and one from the next:*/
                    x = rows[i].getElementsByTagName("TD")[n];
                    y = rows[i + 1].getElementsByTagName("TD")[n];
                    /*check if the two rows should switch place,
                    based on the direction, asc or desc:*/
                    if (dir == "asc") {
                        if (n == 0) {
                            if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                                //if so, mark as a switch and break the loop:
                                shouldSwitch = true;
                                break;
                            }
                        } else {
                            if (Number(x.innerHTML) > Number(y.innerHTML)) {
                                //if so, mark as a switch and break the loop:
                                shouldSwitch = true;
                                break;
                            }
                        }

                    } else if (dir == "desc") {
                        if (n == 0) {
                            if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
                                //if so, mark as a switch and break the loop:
                                shouldSwitch = true;
                                break;
                            }
                        } else {
                            if (Number(x.innerHTML) < Number(y.innerHTML)) {
                                //if so, mark as a switch and break the loop:
                                shouldSwitch = true;
                                break;
                            }
                        }

                    }
                }
                if (shouldSwitch) {
                    /*If a switch has been marked, make the switch
                    and mark that a switch has been done:*/
                    rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                    switching = true;
                    //Each time a switch is done, increase this count by 1:
                    switchcount++;
                } else {
                    /*If no switching has been done AND the direction is "asc",
                    set the direction to "desc" and run the while loop again.*/
                    if (switchcount == 0 && dir == "asc") {
                        dir = "desc";
                        switching = true;
                    }
                }
            }
        }
    </script>
</body>
</html>